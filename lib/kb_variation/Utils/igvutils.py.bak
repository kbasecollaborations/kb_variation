
import os
import subprocess
import uuid


from pprint import pprint,pformat

class igvutils:

    def __init__(self, scratch):
       self.scratch = scratch
       self.output_dir = "/kb/module/work/tmp/report_dir/data"
       pass 

    
    def run_command(self, command):

        cmdProcess = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)
        for line in cmdProcess.stdout:
            print(line.decode("utf-8").rstrip())
            cmdProcess.wait()
            print('return code: ' + str(cmdProcess.returncode))
            if cmdProcess.returncode != 0:
                raise ValueError('Error running bwa index, return code: ' +
                                 str(cmdProcess.returncode) + '\n')

    
    def prepare_data_igv (self, genome_fa_path, vcf_path):

    	cmd1 = "bgzip " +  vcf_path   #TODO: Fix hard codes
    	run_command(cmd1)

        vcf_gz = vcf_path + ".gz"
        cmd2 = "tabix -p vcf vcf_gz"
        run_command (cmd2)

        cmd3 = "samtools faidx genome_fa_path"
        run_command(cmd3)

        


